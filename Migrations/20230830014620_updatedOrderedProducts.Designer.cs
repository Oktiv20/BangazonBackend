// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BangazonBackend.Migrations
{
    [DbContext(typeof(BangazonBackendDbContext))]
    [Migration("20230830014620_updatedOrderedProducts")]
    partial class updatedOrderedProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BangazonBackend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Completed")
                        .HasColumnType("boolean");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = true,
                            PaymentType = "Credit Card",
                            ProductId = 1,
                            TotalPrice = 499.99m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Completed = true,
                            PaymentType = "PayPal",
                            ProductId = 2,
                            TotalPrice = 299.99m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Completed = true,
                            PaymentType = "Debit Card",
                            ProductId = 3,
                            TotalPrice = 79.99m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Completed = true,
                            PaymentType = "Gift Card",
                            ProductId = 4,
                            TotalPrice = 799.99m,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BangazonBackend.Models.OrderedProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderedProducts");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            OrderId = 1,
                            Id = 1
                        },
                        new
                        {
                            ProductId = 2,
                            OrderId = 1,
                            Id = 1
                        },
                        new
                        {
                            ProductId = 2,
                            OrderId = 2,
                            Id = 2
                        },
                        new
                        {
                            ProductId = 3,
                            OrderId = 3,
                            Id = 3
                        },
                        new
                        {
                            ProductId = 4,
                            OrderId = 4,
                            Id = 4
                        });
                });

            modelBuilder.Entity("BangazonBackend.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            Type = "PayPal"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Gift Card"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Debit Card"
                        });
                });

            modelBuilder.Entity("BangazonBackend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("InStock")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("numeric");

                    b.Property<string>("ProductType")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(2023, 8, 29, 20, 46, 20, 64, DateTimeKind.Local).AddTicks(3727),
                            Description = "High-end smartphone with advanced features.",
                            InStock = true,
                            Price = 499.99m,
                            ProductType = "Electronics",
                            Quantity = 50,
                            SellerId = 1,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = 2,
                            DateAdded = new DateTime(2023, 8, 29, 20, 46, 20, 64, DateTimeKind.Local).AddTicks(3770),
                            Description = "Complete set of golf clubs for all skill levels.",
                            InStock = true,
                            Price = 299.99m,
                            ProductType = "Sports Equipment",
                            Quantity = 20,
                            SellerId = 2,
                            Title = "Golf Club Set"
                        },
                        new
                        {
                            Id = 3,
                            DateAdded = new DateTime(2023, 8, 29, 20, 46, 20, 64, DateTimeKind.Local).AddTicks(3775),
                            Description = "Comfortable running shoes with excellent cushioning.",
                            InStock = true,
                            Price = 79.99m,
                            ProductType = "Footwear",
                            Quantity = 100,
                            SellerId = 3,
                            Title = "Running Shoes"
                        },
                        new
                        {
                            Id = 4,
                            DateAdded = new DateTime(2023, 8, 29, 20, 46, 20, 64, DateTimeKind.Local).AddTicks(3778),
                            Description = "Energy-efficient refrigerator with ample storage space.",
                            InStock = true,
                            Price = 799.99m,
                            ProductType = "Appliances",
                            Quantity = 5,
                            SellerId = 4,
                            Title = "Refrigerator"
                        });
                });

            modelBuilder.Entity("BangazonBackend.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Sports Equipment"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Footwear"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Appliances"
                        });
                });

            modelBuilder.Entity("BangazonBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsSeller")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Email = "jack.dough@jd.com",
                            FirstName = "Jack",
                            IsSeller = false,
                            LastName = "Dough"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Email = "jane.allen@ja.com",
                            FirstName = "Jane",
                            IsSeller = false,
                            LastName = "Allen"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak Ave",
                            Email = "michael.johnson@mj.com",
                            FirstName = "Michael",
                            IsSeller = false,
                            LastName = "Johson"
                        },
                        new
                        {
                            Id = 4,
                            Address = "555 Pine Rd",
                            Email = "emily.brown@eb.com",
                            FirstName = "Emily",
                            IsSeller = true,
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("BangazonBackend.Models.UserPaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UserPaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PaymentId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            PaymentId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            PaymentId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            PaymentId = 4,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("BangazonBackend.Models.OrderedProduct", b =>
                {
                    b.HasOne("BangazonBackend.Models.Order", "Order")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BangazonBackend.Models.Product", "Product")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BangazonBackend.Models.Product", b =>
                {
                    b.HasOne("BangazonBackend.Models.Order", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("BangazonBackend.Models.Order", b =>
                {
                    b.Navigation("OrderedProducts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BangazonBackend.Models.Product", b =>
                {
                    b.Navigation("OrderedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
